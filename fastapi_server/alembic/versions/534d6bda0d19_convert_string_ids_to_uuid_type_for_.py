"""Convert string IDs to UUID type for PostgreSQL

Revision ID: 534d6bda0d19
Revises: a5f525bdfe6b
Create Date: 2025-09-06 15:37:45.707390

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '534d6bda0d19'
down_revision = 'a5f525bdfe6b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints first
    op.drop_constraint('appointments_patient_id_fkey', 'appointments', type_='foreignkey')
    op.drop_constraint('appointments_doctor_id_fkey', 'appointments', type_='foreignkey')
    op.drop_constraint('appointments_room_id_fkey', 'appointments', type_='foreignkey')
    op.drop_constraint('appointments_appointment_type_id_fkey', 'appointments', type_='foreignkey')
    op.drop_constraint('patients_insurance_plan_id_fkey', 'patients', type_='foreignkey')
    
    # Convert VARCHAR to UUID using USING clause
    op.execute('ALTER TABLE appointment_types ALTER COLUMN id TYPE UUID USING id::uuid')
    op.execute('ALTER TABLE appointments ALTER COLUMN id TYPE UUID USING id::uuid')
    op.execute('ALTER TABLE appointments ALTER COLUMN patient_id TYPE UUID USING patient_id::uuid')
    op.execute('ALTER TABLE appointments ALTER COLUMN doctor_id TYPE UUID USING doctor_id::uuid')
    op.execute('ALTER TABLE appointments ALTER COLUMN room_id TYPE UUID USING room_id::uuid')
    op.execute('ALTER TABLE appointments ALTER COLUMN appointment_type_id TYPE UUID USING appointment_type_id::uuid')
    op.execute('ALTER TABLE clinic_rooms ALTER COLUMN id TYPE UUID USING id::uuid')
    op.execute('ALTER TABLE doctors ALTER COLUMN id TYPE UUID USING id::uuid')
    op.execute('ALTER TABLE insurance_plans ALTER COLUMN id TYPE UUID USING id::uuid')
    op.execute('ALTER TABLE patients ALTER COLUMN id TYPE UUID USING id::uuid')
    op.execute('ALTER TABLE patients ALTER COLUMN insurance_plan_id TYPE UUID USING insurance_plan_id::uuid')
    op.execute('ALTER TABLE users ALTER COLUMN id TYPE UUID USING id::uuid')
    
    # Recreate foreign key constraints
    op.create_foreign_key('appointments_patient_id_fkey', 'appointments', 'patients', ['patient_id'], ['id'])
    op.create_foreign_key('appointments_doctor_id_fkey', 'appointments', 'doctors', ['doctor_id'], ['id'])
    op.create_foreign_key('appointments_room_id_fkey', 'appointments', 'clinic_rooms', ['room_id'], ['id'])
    op.create_foreign_key('appointments_appointment_type_id_fkey', 'appointments', 'appointment_types', ['appointment_type_id'], ['id'])
    op.create_foreign_key('patients_insurance_plan_id_fkey', 'patients', 'insurance_plans', ['insurance_plan_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('patients', 'insurance_plan_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)
    op.alter_column('insurance_plans', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('doctors', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('clinic_rooms', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('appointments', 'appointment_type_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('appointments', 'room_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)
    op.alter_column('appointments', 'doctor_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('appointments', 'patient_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('appointments', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.alter_column('appointment_types', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    # ### end Alembic commands ###